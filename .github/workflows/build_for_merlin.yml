name: Build For Merlin

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Set up Go environment
              uses: actions/setup-go@v2
              with:
                  go-version: ^1.16
              id: go

            - name: Check out code into the Go module directory
              uses: actions/checkout@v2

            - name: Get dependencies
              run: |
                  go get -v -t -d ./...
                  if [ -f Gopkg.toml ]; then
                      curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                      dep ensure
                  fi

            - name: Build v2ray
              env:
                  CGO_ENABLED: 0
                  GOARCH: arm
                  GOOS: linux
              run: go build -o v2ray -trimpath -ldflags "-s -w" ./main

            - name: Build v2ctl
              env:
                  CGO_ENABLED: 0
                  GOARCH: arm
                  GOOS: linux
              run: go build -o v2ctl -trimpath -ldflags "-s -w" -tags confonly ./infra/control/main

            - name: Archive Binaries
              run: tar -czf v2ray-linux-arm.tar.gz v2ray v2ctl

            - name: Get current time
              uses: 1466587594/get-current-time@v2
              id: current-time
              with:
                  format: YYYYMMDD
                  utcOffset: "+08:00"

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.current-time.outputs.formattedTime }}
                  release_name: Release ${{ steps.current-time.outputs.formattedTime }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./v2ray-linux-arm.tar.gz
                  asset_name: v2ray-linux-arm.tar.gz
                  asset_content_type: application/gzip
